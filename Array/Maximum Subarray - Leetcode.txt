class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxsum = INT_MIN, cursum = 0,minsum =0;
        
        // for(int i =  0 ;i < nums.size(); i++){
        //     cursum += nums[i]; 
        //     if(cursum > maxsum){
        //         maxsum = cursum-minsum;
        //     }
        //     if(cursum < 0){
        //         cursum = 0;
        //     }
        //     minsum = min(minsum,cursum);
        // }
        // return maxsum;


        // for(int i =  0 ;i < nums.size(); i++){
        //     cursum += nums[i]; 
        //     if(cursum > maxsum){
        //         maxsum = cursum;
        //     }
        //     if(cursum < 0){
        //         cursum = 0;
        //     }
        // }
        // return maxsum;

// kadane's algorithm
        int maxi = INT_MIN,sum = 0;
        for(int i = 0; i < nums.size(); i++){
            sum += nums[i];
            maxi = max(maxi,sum);

            if(sum < 0){
                sum = 0;
            }
        }
        return maxi;

    }
};